/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const FlowLazyImport = createFileRoute('/flow')()
const DrawLazyImport = createFileRoute('/draw')()
const CodeLazyImport = createFileRoute('/code')()

// Create/Update Routes

const FlowLazyRoute = FlowLazyImport.update({
  path: '/flow',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/flow.lazy').then((d) => d.Route))

const DrawLazyRoute = DrawLazyImport.update({
  path: '/draw',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/draw.lazy').then((d) => d.Route))

const CodeLazyRoute = CodeLazyImport.update({
  path: '/code',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/code.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/code': {
      preLoaderRoute: typeof CodeLazyImport
      parentRoute: typeof rootRoute
    }
    '/draw': {
      preLoaderRoute: typeof DrawLazyImport
      parentRoute: typeof rootRoute
    }
    '/flow': {
      preLoaderRoute: typeof FlowLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  CodeLazyRoute,
  DrawLazyRoute,
  FlowLazyRoute,
])

/* prettier-ignore-end */
